api:
  replicaCount: 1
  defaultDomain: api.exless.my.com
  domains: [api.exless.my.com,cllctr.exless.my.com,app.exless.my.com]
  image:
    repository: mydockerhost/exceptionless/api
    tag: latest
    pullPolicy: IfNotPresent

collector:
  replicaCount: 1
  defaultDomain: cllctr.exless.my.com
  domains: [cllctr.exless.my.com,api.exless.my.com,app.exless.my.com]

app:
  replicaCount: 1
  defaultDomain: app.exless.my.com
  domains: [app.exless.my.com,api.exless.my.com,cllctr.exless.my.com]
  image:
    repository: mydockerhost/exceptionless/ui
    tag: latest
    pullPolicy: IfNotPresent

jobs:
  image:
    repository: mydockerhost/exceptionless/job
    tag: latest
    pullPolicy: IfNotPresent
  closeInactiveSessions:
    replicaCount: 1
  dailySummary:
    replicaCount: 1
  eventNotifications:
    replicaCount: 1
  eventPosts:
    replicaCount: 1
  eventUserDescriptions:
    replicaCount: 1
  mailMessage:
    replicaCount: 1
  stackEventCount:
    replicaCount: 1
  webhooks:
    replicaCount: 1
  workitem:
    replicaCount: 1
  eventUsage:
    replicaCount: 1

statsd:
  token: statsdtoken
  user: statsduser

config: {}
#  key: value

service:
  type: ClusterIP

elasticsearch:
  connectionString: 
  image:
    repository: mydockerhost/exceptionless/elasticsearch
    tag: 8.3.1
    pullPolicy: IfNotPresent

redis:
  connectionString: 
  image:
    repository: mydockerhost/redis
    tag: 7.0-alpine
    pullPolicy: IfNotPresent

storageClass:
  name: exceptionless-nfs-storage
    # Set access mode - ReadWriteOnce, ReadOnlyMany or ReadWriteMany
  accessModes: ReadWriteMany
  resources:
    requests:
      storage: 5Gi

storage:
  connectionString: 

cache:
  connectionString: 

metrics:
  connectionString: 

queue:
  connectionString: 

email:
  connectionString: smtp://myemail@163.com:mypwd@smtp.163.com:25

messagebus:
  connectionString: 
